name: Publish npm Package

on:
  push:
    branches:
      - main

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Set up Git credentials
        run: |
          git config --global user.email "mbmohib@example.com"
          git config --global user.name "Mohammad Mohibbullah"
          echo "machine github.com login ${{ secrets.GH_TOKEN }}" > ~/.netrc
          chmod 600 ~/.netrc

      - name: Install dependencies
        run: npm install

      - name: Build lib
        run: npm run build

      - name: Build Storybook
        run: npm run build-storybook

      - name: Deploy to S3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks --delete
        env:
          SOURCE_DIR: ./storybook-static
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Log in to npm
        run:
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" >
          ~/.npmrc

      - name: Bump version and publish to npm
        run: |
          # Bump the patch version
          npm version patch --no-git-tag-version

          # Get the new version from package.json
          NEW_VERSION=$(node -p -e "require('./package.json').version")

          # Commit the updated package.json
          git add package.json
          git commit -m "Bump version to $NEW_VERSION [skip ci]"

          # Publish to npm
          npm publish
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Push changes to repository
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          git push origin && git push --tags
